{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gangw\\\\OneDrive\\\\Desktop\\\\online-frontend\\\\src\\\\commponent\\\\Auth\\\\LoginForm.jsx\",\n  _s = $RefreshSig$();\nimport { Button, TextField, Typography } from \"@mui/material\";\nimport { Field, Form, Formik } from \"formik\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { loginUser } from \"../../State/Authentication/Action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValues = {\n  email: \"\",\n  password: \"\"\n};\nconst LoginForm = () => {\n  _s();\n  const Navigate = useNavigate();\n  const dispatch = useDispatch();\n  const handleSubmit = values => {\n    dispatch(loginUser({\n      userData: values,\n      Navigate\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      className: \"text-center\",\n      children: \"login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(Field, {\n          as: TextField,\n          name: \"email\",\n          label: \"email\",\n          fullWidth: true,\n          margin: \"normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          as: TextField,\n          name: \"password\",\n          label: \"password\",\n          fullWidth: true,\n          margin: \"normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          type: \"submit\",\n          variant: \"contained\",\n          className: \"\",\n          sx: {\n            mt: 2,\n            padding: \"1rem\"\n          },\n          children: \"login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      align: \"center\",\n      sx: {\n        mt: 3\n      },\n      children: [\"Don't have Account ?\", /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => Navigate(\"/account/register\"),\n        size: \"small\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"eWc8T0RGvBsWPQ5wL3sGoNky9h0=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["Button","TextField","Typography","Field","Form","Formik","React","useDispatch","useNavigate","loginUser","jsxDEV","_jsxDEV","initialValues","email","password","LoginForm","_s","Navigate","dispatch","handleSubmit","values","userData","children","variant","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","as","name","label","fullWidth","margin","type","sx","mt","padding","align","onClick","size","_c","$RefreshReg$"],"sources":["C:/Users/gangw/OneDrive/Desktop/online-frontend/src/commponent/Auth/LoginForm.jsx"],"sourcesContent":["import { Button, TextField, Typography } from \"@mui/material\";\r\nimport { Field, Form, Formik } from \"formik\";\r\nimport React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { loginUser } from \"../../State/Authentication/Action\";\r\nconst initialValues = {\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\nconst LoginForm = () => {\r\n  const Navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const handleSubmit = (values) => {\r\n    dispatch(loginUser({ userData: values, Navigate }));\r\n  };\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h5\" className=\"text-center\">\r\n        login\r\n      </Typography>\r\n      <Formik initialValues={initialValues} onSubmit={handleSubmit}>\r\n        <Form>\r\n          {\" \"}\r\n          <Field\r\n            as={TextField}\r\n            name=\"email\"\r\n            label=\"email\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n          />\r\n          <Field\r\n            as={TextField}\r\n            name=\"password\"\r\n            label=\"password\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n          />\r\n          <Button\r\n            fullWidth\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            className=\"\"\r\n            sx={{ mt: 2, padding: \"1rem\" }}\r\n          >\r\n            login\r\n          </Button>\r\n        </Form>\r\n      </Formik>\r\n      <Typography variant=\"body2\" align=\"center\" sx={{ mt: 3 }}>\r\n        Don't have Account ?\r\n        <Button onClick={() => Navigate(\"/account/register\")} size=\"small\">\r\n          Register\r\n        </Button>\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}