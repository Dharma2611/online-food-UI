{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gangw\\\\OneDrive\\\\Desktop\\\\online-frontend\\\\src\\\\commponent\\\\Auth\\\\LoginForm.jsx\",\n  _s = $RefreshSig$();\nimport { Button, TextField, Typography, FormControl, FormHelperText } from \"@mui/material\";\nimport { Field, Form, Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { loginUser } from \"../../State/Authentication/Action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValues = {\n  email: \"\",\n  password: \"\"\n};\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().email(\"Invalid email format\").required(\"Email is required\"),\n  password: Yup.string().min(6, \"Password should be at least 6 characters\").required(\"Password is required\")\n});\nconst LoginForm = () => {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [error, setError] = React.useState(null);\n  const handleSubmit = async (values, {\n    setSubmitting\n  }) => {\n    setError(null); // Reset error before new submission\n    try {\n      await dispatch(loginUser({\n        userData: values,\n        navigate\n      }));\n    } catch (err) {\n      setError(err.message); // Set actual error message based on the backend response\n    } finally {\n      setSubmitting(false); // Allow button to be clickable again\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      className: \"text-center\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: handleSubmit,\n      children: ({\n        errors,\n        touched,\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          margin: \"normal\",\n          error: touched.email && Boolean(errors.email),\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            as: TextField,\n            name: \"email\",\n            label: \"Email\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            children: touched.email && errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          margin: \"normal\",\n          error: touched.password && Boolean(errors.password),\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            as: TextField,\n            name: \"password\",\n            label: \"Password\",\n            type: \"password\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            children: touched.password && errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          type: \"submit\",\n          variant: \"contained\",\n          sx: {\n            mt: 2,\n            padding: \"1rem\"\n          },\n          disabled: isSubmitting,\n          children: isSubmitting ? \"Logging in...\" : \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      align: \"center\",\n      sx: {\n        mt: 3\n      },\n      children: [\"Don't have an account?\", /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => navigate(\"/account/register\"),\n        size: \"small\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"r3pS5aDTCJohlspbT804FUr6HII=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["Button","TextField","Typography","FormControl","FormHelperText","Field","Form","Formik","Yup","React","useDispatch","useNavigate","loginUser","jsxDEV","_jsxDEV","initialValues","email","password","validationSchema","object","shape","string","required","min","LoginForm","_s","navigate","dispatch","error","setError","useState","handleSubmit","values","setSubmitting","userData","err","message","children","variant","className","fileName","_jsxFileName","lineNumber","columnNumber","color","onSubmit","errors","touched","isSubmitting","fullWidth","margin","Boolean","as","name","label","type","sx","mt","padding","disabled","align","onClick","size","_c","$RefreshReg$"],"sources":["C:/Users/gangw/OneDrive/Desktop/online-frontend/src/commponent/Auth/LoginForm.jsx"],"sourcesContent":["import {\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  FormControl,\r\n  FormHelperText,\r\n} from \"@mui/material\";\r\nimport { Field, Form, Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { loginUser } from \"../../State/Authentication/Action\";\r\n\r\nconst initialValues = {\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .email(\"Invalid email format\")\r\n    .required(\"Email is required\"),\r\n  password: Yup.string()\r\n    .min(6, \"Password should be at least 6 characters\")\r\n    .required(\"Password is required\"),\r\n});\r\n\r\nconst LoginForm = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [error, setError] = React.useState(null);\r\n\r\n  const handleSubmit = async (values, { setSubmitting }) => {\r\n    setError(null); // Reset error before new submission\r\n    try {\r\n      await dispatch(loginUser({ userData: values, navigate }));\r\n    } catch (err) {\r\n      setError(err.message); // Set actual error message based on the backend response\r\n    } finally {\r\n      setSubmitting(false); // Allow button to be clickable again\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h5\" className=\"text-center\">\r\n        Login\r\n      </Typography>\r\n      {error && <Typography color=\"error\">{error}</Typography>}\r\n\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {({ errors, touched, isSubmitting }) => (\r\n          <Form>\r\n            <FormControl\r\n              fullWidth\r\n              margin=\"normal\"\r\n              error={touched.email && Boolean(errors.email)}\r\n            >\r\n              <Field as={TextField} name=\"email\" label=\"Email\" fullWidth />\r\n              <FormHelperText>{touched.email && errors.email}</FormHelperText>\r\n            </FormControl>\r\n\r\n            <FormControl\r\n              fullWidth\r\n              margin=\"normal\"\r\n              error={touched.password && Boolean(errors.password)}\r\n            >\r\n              <Field\r\n                as={TextField}\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                fullWidth\r\n              />\r\n              <FormHelperText>\r\n                {touched.password && errors.password}\r\n              </FormHelperText>\r\n            </FormControl>\r\n\r\n            <Button\r\n              fullWidth\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              sx={{ mt: 2, padding: \"1rem\" }}\r\n              disabled={isSubmitting}\r\n            >\r\n              {isSubmitting ? \"Logging in...\" : \"Login\"}\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n      <Typography variant=\"body2\" align=\"center\" sx={{ mt: 3 }}>\r\n        Don't have an account?\r\n        <Button onClick={() => navigate(\"/account/register\")} size=\"small\">\r\n          Register\r\n        </Button>\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}