{"ast":null,"code":"import { api } from \"../../commponent/config/api\";\nimport { ADD_TO_CART_FAILURE, ADD_TO_CART_REQUEST, ADD_TO_CART_SUCCESS, CLEAR_CART, CLEAR_CART_FAILURE, CLEAR_CART_REQUEST, CLEAR_CART_SUCCESS, FIND_CART_FAILURE, FIND_CART_REQUEST, FIND_CART_SUCCESS, GET_ALL_CART_ITEMS_FAILURE, GET_ALL_CART_ITEMS_REQUEST, GET_ALL_CART_ITEMS_SUCCESS, REMOVE_FROM_CART_FAILURE, REMOVE_FROM_CART_REQUEST, REMOVE_FROM_CART_SUCCESS, UPDATE_CART_ITEM_FAILURE, UPDATE_CART_ITEM_REQUEST, UPDATE_CART_ITEM_SUCCESS } from \"./ActionType\";\nexport const findCart = token => {\n  return async dispatch => {\n    dispatch({\n      type: FIND_CART_REQUEST\n    });\n    try {\n      const response = await api.get(`/api/cart`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      dispatch({\n        type: FIND_CART_SUCCESS,\n        payload: response.data\n      });\n      console.log(\"my CArt\", response.data);\n    } catch (error) {\n      console.log(\"error\", error);\n      dispatch({\n        type: FIND_CART_FAILURE,\n        payload: error\n      });\n    }\n  };\n};\nexport const getAllCArtItem = reqData => {\n  return async dispatch => {\n    dispatch({\n      type: GET_ALL_CART_ITEMS_REQUEST\n    });\n    try {\n      const response = await api.get(`/api/carts/${reqData.cartId}/item`, {\n        headers: {\n          Authorization: `Bearer ${reqData.token}`\n        }\n      });\n      dispatch({\n        type: GET_ALL_CART_ITEMS_SUCCESS,\n        payload: response.data\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_ALL_CART_ITEMS_FAILURE,\n        payload: error\n      });\n    }\n  };\n};\nexport const addItemToCart = reqData => {\n  return async dispatch => {\n    dispatch({\n      type: ADD_TO_CART_REQUEST\n    });\n    try {\n      const response = await api.put(`/api/cart/add`, reqData.cartItems, {\n        headers: {\n          Authorization: `Bearer ${reqData.token}`\n        }\n      });\n      console.log(\"Full server response: \", response);\n      console.log(\"Response data: \", response === null || response === void 0 ? void 0 : response.data);\n\n      // Dispatch entire response.data directly since no `cartItem` key exists\n      dispatch({\n        type: ADD_TO_CART_SUCCESS,\n        payload: response.data\n      });\n    } catch (error) {\n      console.error(\"Error during add to cart: \", error);\n      dispatch({\n        type: ADD_TO_CART_FAILURE,\n        payload: error\n      });\n    }\n  };\n};\nexport const updateCartItem = reqData => {\n  console.log(\"Request data for updateCartItem:\", reqData);\n  return async dispatch => {\n    dispatch({\n      type: UPDATE_CART_ITEM_REQUEST\n    });\n    try {\n      if (!reqData.data || !reqData.data.cartItemId) {\n        throw new Error(\"Cart item ID is required for updating.\");\n      }\n      const response = await api.put(`/api/cart-item/update`, reqData.data,\n      // Adjust if backend expects cartItemId in path or query\n      {\n        headers: {\n          Authorization: `Bearer ${reqData.jwt}`\n        }\n      });\n      console.log(\"Updated cart item successfully:\", response.data);\n      dispatch({\n        type: UPDATE_CART_ITEM_SUCCESS,\n        payload: response.data\n      });\n    } catch (error) {\n      dispatch({\n        type: UPDATE_CART_ITEM_FAILURE,\n        payload: error.message\n      });\n    }\n  };\n};\nexport const removeCartItem = ({\n  cartItemId\n}) => {\n  const jwt = localStorage.getItem(\"jwt\");\n  console.log(\"jwt\", jwt);\n  return async dispatch => {\n    dispatch({\n      type: REMOVE_FROM_CART_REQUEST\n    });\n    try {\n      const data = await api.delete(`/api/cart-item/${cartItemId}/remove`, {\n        headers: {\n          Authorization: `Bearer ${jwt}` // Include the JWT in the header\n        }\n      });\n      console.log(\"remove item\", data);\n      dispatch({\n        type: REMOVE_FROM_CART_SUCCESS,\n        payload: cartItemId\n      });\n    } catch (error) {\n      console.log(\"removed is error\", error);\n      dispatch({\n        type: REMOVE_FROM_CART_FAILURE,\n        payload: error.message\n      });\n    }\n  };\n};\nexport const clearCartAction = () => {\n  return async dispatch => {\n    dispatch({\n      type: CLEAR_CART_REQUEST\n    });\n    try {\n      const response = await api.put(`/api/cart/clear`, {}, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n        }\n      });\n      dispatch({\n        type: CLEAR_CART_SUCCESS,\n        payload: response\n      });\n    } catch (error) {\n      dispatch({\n        type: CLEAR_CART_FAILURE,\n        payload: error\n      });\n    }\n  };\n};","map":{"version":3,"names":["api","ADD_TO_CART_FAILURE","ADD_TO_CART_REQUEST","ADD_TO_CART_SUCCESS","CLEAR_CART","CLEAR_CART_FAILURE","CLEAR_CART_REQUEST","CLEAR_CART_SUCCESS","FIND_CART_FAILURE","FIND_CART_REQUEST","FIND_CART_SUCCESS","GET_ALL_CART_ITEMS_FAILURE","GET_ALL_CART_ITEMS_REQUEST","GET_ALL_CART_ITEMS_SUCCESS","REMOVE_FROM_CART_FAILURE","REMOVE_FROM_CART_REQUEST","REMOVE_FROM_CART_SUCCESS","UPDATE_CART_ITEM_FAILURE","UPDATE_CART_ITEM_REQUEST","UPDATE_CART_ITEM_SUCCESS","findCart","token","dispatch","type","response","get","headers","Authorization","payload","data","console","log","error","getAllCArtItem","reqData","cartId","addItemToCart","put","cartItems","updateCartItem","cartItemId","Error","jwt","message","removeCartItem","localStorage","getItem","delete","clearCartAction"],"sources":["C:/Users/gangw/OneDrive/Desktop/online-frontend/src/State/Cart/Action.js"],"sourcesContent":["import { api } from \"../../commponent/config/api\";\r\nimport {\r\n  ADD_TO_CART_FAILURE,\r\n  ADD_TO_CART_REQUEST,\r\n  ADD_TO_CART_SUCCESS,\r\n  CLEAR_CART,\r\n  CLEAR_CART_FAILURE,\r\n  CLEAR_CART_REQUEST,\r\n  CLEAR_CART_SUCCESS,\r\n  FIND_CART_FAILURE,\r\n  FIND_CART_REQUEST,\r\n  FIND_CART_SUCCESS,\r\n  GET_ALL_CART_ITEMS_FAILURE,\r\n  GET_ALL_CART_ITEMS_REQUEST,\r\n  GET_ALL_CART_ITEMS_SUCCESS,\r\n  REMOVE_FROM_CART_FAILURE,\r\n  REMOVE_FROM_CART_REQUEST,\r\n  REMOVE_FROM_CART_SUCCESS,\r\n  UPDATE_CART_ITEM_FAILURE,\r\n  UPDATE_CART_ITEM_REQUEST,\r\n  UPDATE_CART_ITEM_SUCCESS,\r\n} from \"./ActionType\";\r\n\r\nexport const findCart = (token) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: FIND_CART_REQUEST });\r\n    try {\r\n      const response = await api.get(`/api/cart`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      dispatch({ type: FIND_CART_SUCCESS, payload: response.data });\r\n      console.log(\"my CArt\", response.data);\r\n    } catch (error) {\r\n      console.log(\"error\", error);\r\n      dispatch({ type: FIND_CART_FAILURE, payload: error });\r\n    }\r\n  };\r\n};\r\n\r\nexport const getAllCArtItem = (reqData) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: GET_ALL_CART_ITEMS_REQUEST });\r\n    try {\r\n      const response = await api.get(`/api/carts/${reqData.cartId}/item`, {\r\n        headers: {\r\n          Authorization: `Bearer ${reqData.token}`,\r\n        },\r\n      });\r\n      dispatch({ type: GET_ALL_CART_ITEMS_SUCCESS, payload: response.data });\r\n    } catch (error) {\r\n      dispatch({ type: GET_ALL_CART_ITEMS_FAILURE, payload: error });\r\n    }\r\n  };\r\n};\r\n\r\nexport const addItemToCart = (reqData) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: ADD_TO_CART_REQUEST });\r\n    try {\r\n      const response = await api.put(`/api/cart/add`, reqData.cartItems, {\r\n        headers: {\r\n          Authorization: `Bearer ${reqData.token}`,\r\n        },\r\n      });\r\n\r\n      console.log(\"Full server response: \", response);\r\n      console.log(\"Response data: \", response?.data);\r\n\r\n      // Dispatch entire response.data directly since no `cartItem` key exists\r\n      dispatch({\r\n        type: ADD_TO_CART_SUCCESS,\r\n        payload: response.data,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error during add to cart: \", error);\r\n      dispatch({ type: ADD_TO_CART_FAILURE, payload: error });\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateCartItem = (reqData) => {\r\n  console.log(\"Request data for updateCartItem:\", reqData);\r\n  return async (dispatch) => {\r\n    dispatch({ type: UPDATE_CART_ITEM_REQUEST });\r\n    try {\r\n      if (!reqData.data || !reqData.data.cartItemId) {\r\n        throw new Error(\"Cart item ID is required for updating.\");\r\n      }\r\n\r\n      const response = await api.put(\r\n        `/api/cart-item/update`,\r\n        reqData.data, // Adjust if backend expects cartItemId in path or query\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${reqData.jwt}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      console.log(\"Updated cart item successfully:\", response.data);\r\n      dispatch({ type: UPDATE_CART_ITEM_SUCCESS, payload: response.data });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_CART_ITEM_FAILURE, payload: error.message });\r\n    }\r\n  };\r\n};\r\n\r\nexport const removeCartItem = ({ cartItemId }) => {\r\n  const jwt = localStorage.getItem(\"jwt\");\r\n  console.log(\"jwt\", jwt);\r\n  return async (dispatch) => {\r\n    dispatch({ type: REMOVE_FROM_CART_REQUEST });\r\n    try {\r\n      const data = await api.delete(`/api/cart-item/${cartItemId}/remove`, {\r\n        headers: {\r\n          Authorization: `Bearer ${jwt}`, // Include the JWT in the header\r\n        },\r\n      });\r\n      console.log(\"remove item\", data);\r\n      dispatch({ type: REMOVE_FROM_CART_SUCCESS, payload: cartItemId });\r\n    } catch (error) {\r\n      console.log(\"removed is error\", error);\r\n      dispatch({ type: REMOVE_FROM_CART_FAILURE, payload: error.message });\r\n    }\r\n  };\r\n};\r\n\r\nexport const clearCartAction = () => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: CLEAR_CART_REQUEST });\r\n    try {\r\n      const response = await api.put(\r\n        `/api/cart/clear`,\r\n        {},\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n          },\r\n        }\r\n      );\r\n      dispatch({ type: CLEAR_CART_SUCCESS, payload: response });\r\n    } catch (error) {\r\n      dispatch({ type: CLEAR_CART_FAILURE, payload: error });\r\n    }\r\n  };\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}