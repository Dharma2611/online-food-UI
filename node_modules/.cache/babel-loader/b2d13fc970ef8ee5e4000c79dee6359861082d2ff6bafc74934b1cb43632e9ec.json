{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gangw\\\\OneDrive\\\\Desktop\\\\online-frontend\\\\src\\\\commponent\\\\Auth\\\\RegisterForm.jsx\",\n  _s = $RefreshSig$();\nimport { Button, MenuItem, Select, TextField, Typography, FormControl, InputLabel, FormHelperText } from \"@mui/material\";\nimport { Field, Form, Formik } from \"formik\";\nimport * as Yup from \"yup\"; // Import Yup for validation\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { registerUser } from \"../../State/Authentication/Action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValues = {\n  fullName: \"\",\n  email: \"\",\n  password: \"\",\n  role: \"\"\n};\n\n// Define validation schema\nconst validationSchema = Yup.object().shape({\n  fullName: Yup.string().required(\"Full Name is required\"),\n  email: Yup.string().email(\"Invalid email format\").required(\"Email is required\"),\n  password: Yup.string().min(6, \"Password should be at least 6 characters\").required(\"Password is required\"),\n  role: Yup.string().required(\"Role is required\")\n});\nconst RegisterForm = () => {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const handleSubmit = values => {\n    console.log(\"Form Values\", values);\n    dispatch(registerUser({\n      userData: values,\n      navigate\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      className: \"text-center\",\n      children: \"Register Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema // Add validation schema here\n      ,\n      onSubmit: handleSubmit,\n      children: ({\n        errors,\n        touched\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          as: TextField,\n          name: \"fullName\",\n          label: \"Full Name\" // Use consistent capitalization\n          ,\n          fullWidth: true,\n          margin: \"normal\",\n          error: touched.fullName && Boolean(errors.fullName),\n          helperText: touched.fullName && errors.fullName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          as: TextField,\n          name: \"email\",\n          label: \"Email\",\n          fullWidth: true,\n          margin: \"normal\",\n          error: touched.email && Boolean(errors.email),\n          helperText: touched.email && errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          as: TextField,\n          name: \"password\",\n          label: \"Password\",\n          type: \"password\" // Ensure password field is of type password\n          ,\n          fullWidth: true,\n          margin: \"normal\",\n          error: touched.password && Boolean(errors.password),\n          helperText: touched.password && errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          margin: \"normal\",\n          error: touched.role && Boolean(errors.role),\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"role-simple-select-label\",\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            as: Select,\n            labelId: \"role-simple-select-label\",\n            id: \"role-simple-select\",\n            name: \"role\",\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"ROLE_CUSTOMER\",\n              children: \"ROLE_CUSTOMER\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"ROLE_RESTAURANT_OWNER\",\n              children: \"ROLE_RESTAURANT_OWNER\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            children: touched.role && errors.role\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          type: \"submit\",\n          variant: \"contained\",\n          sx: {\n            mt: 2,\n            padding: \"1rem\"\n          },\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      align: \"center\",\n      sx: {\n        mt: 3\n      },\n      children: [\"If you have an account already\", /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => navigate(\"/account/login\"),\n        size: \"small\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterForm, \"ZaVe+Vo7W9FMoQ/aTgBrV7UvA04=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n_c = RegisterForm;\nexport default RegisterForm;\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["Button","MenuItem","Select","TextField","Typography","FormControl","InputLabel","FormHelperText","Field","Form","Formik","Yup","React","useDispatch","useNavigate","registerUser","jsxDEV","_jsxDEV","initialValues","fullName","email","password","role","validationSchema","object","shape","string","required","min","RegisterForm","_s","navigate","dispatch","handleSubmit","values","console","log","userData","children","variant","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","errors","touched","as","name","label","fullWidth","margin","error","Boolean","helperText","type","id","labelId","value","sx","mt","padding","align","onClick","size","_c","$RefreshReg$"],"sources":["C:/Users/gangw/OneDrive/Desktop/online-frontend/src/commponent/Auth/RegisterForm.jsx"],"sourcesContent":["import {\r\n  Button,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n  FormControl,\r\n  InputLabel,\r\n  FormHelperText,\r\n} from \"@mui/material\";\r\nimport { Field, Form, Formik } from \"formik\";\r\nimport * as Yup from \"yup\"; // Import Yup for validation\r\nimport React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { registerUser } from \"../../State/Authentication/Action\";\r\n\r\nconst initialValues = {\r\n  fullName: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  role: \"\",\r\n};\r\n\r\n// Define validation schema\r\nconst validationSchema = Yup.object().shape({\r\n  fullName: Yup.string().required(\"Full Name is required\"),\r\n  email: Yup.string()\r\n    .email(\"Invalid email format\")\r\n    .required(\"Email is required\"),\r\n  password: Yup.string()\r\n    .min(6, \"Password should be at least 6 characters\")\r\n    .required(\"Password is required\"),\r\n  role: Yup.string().required(\"Role is required\"),\r\n});\r\n\r\nconst RegisterForm = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (values) => {\r\n    console.log(\"Form Values\", values);\r\n    dispatch(registerUser({ userData: values, navigate }));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h5\" className=\"text-center\">\r\n        Register Page\r\n      </Typography>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema} // Add validation schema here\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {({ errors, touched }) => (\r\n          <Form>\r\n            <Field\r\n              as={TextField}\r\n              name=\"fullName\"\r\n              label=\"Full Name\" // Use consistent capitalization\r\n              fullWidth\r\n              margin=\"normal\"\r\n              error={touched.fullName && Boolean(errors.fullName)}\r\n              helperText={touched.fullName && errors.fullName}\r\n            />\r\n            <Field\r\n              as={TextField}\r\n              name=\"email\"\r\n              label=\"Email\"\r\n              fullWidth\r\n              margin=\"normal\"\r\n              error={touched.email && Boolean(errors.email)}\r\n              helperText={touched.email && errors.email}\r\n            />\r\n            <Field\r\n              as={TextField}\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\" // Ensure password field is of type password\r\n              fullWidth\r\n              margin=\"normal\"\r\n              error={touched.password && Boolean(errors.password)}\r\n              helperText={touched.password && errors.password}\r\n            />\r\n            <FormControl\r\n              fullWidth\r\n              margin=\"normal\"\r\n              error={touched.role && Boolean(errors.role)}\r\n            >\r\n              <InputLabel id=\"role-simple-select-label\">Role</InputLabel>\r\n              <Field\r\n                as={Select}\r\n                labelId=\"role-simple-select-label\"\r\n                id=\"role-simple-select\"\r\n                name=\"role\"\r\n              >\r\n                <MenuItem value=\"ROLE_CUSTOMER\">ROLE_CUSTOMER</MenuItem>\r\n                <MenuItem value={\"ROLE_RESTAURANT_OWNER\"}>\r\n                  ROLE_RESTAURANT_OWNER\r\n                </MenuItem>\r\n              </Field>\r\n              <FormHelperText>{touched.role && errors.role}</FormHelperText>\r\n            </FormControl>\r\n\r\n            <Button\r\n              fullWidth\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              sx={{ mt: 2, padding: \"1rem\" }}\r\n            >\r\n              Register\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n      <Typography variant=\"body2\" align=\"center\" sx={{ mt: 3 }}>\r\n        If you have an account already\r\n        <Button onClick={() => navigate(\"/account/login\")} size=\"small\">\r\n          Login\r\n        </Button>\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}