{"ast":null,"code":"import { api } from \"../../commponent/config/api\";\nimport { ADD_TO_CART_FAILURE, ADD_TO_CART_REQUEST, ADD_TO_CART_SUCCESS, CLEAR_CART, CLEAR_CART_FAILURE, CLEAR_CART_REQUEST, CLEAR_CART_SUCCESS, FIND_CART_FAILURE, FIND_CART_REQUEST, FIND_CART_SUCCESS, GET_ALL_CART_ITEMS_FAILURE, GET_ALL_CART_ITEMS_REQUEST, GET_ALL_CART_ITEMS_SUCCESS, REMOVE_FROM_CART_FAILURE, REMOVE_FROM_CART_REQUEST, REMOVE_FROM_CART_SUCCESS, UPDATE_CART_ITEM_FAILURE, UPDATE_CART_ITEM_REQUEST, UPDATE_CART_ITEM_SUCCESS } from \"./ActionType\";\nexport const findCart = token => {\n  return async dispatch => {\n    dispatch({\n      type: FIND_CART_REQUEST\n    });\n    try {\n      const response = await api.get(`/api/cart`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      dispatch({\n        type: FIND_CART_SUCCESS,\n        payload: response.data\n      });\n      console.log(\"my CArt\", response.data);\n    } catch (error) {\n      console.log(\"error\", error);\n      dispatch({\n        type: FIND_CART_FAILURE,\n        payload: error\n      });\n    }\n  };\n};\nexport const getAllCArtItem = reqData => {\n  return async dispatch => {\n    dispatch({\n      type: GET_ALL_CART_ITEMS_REQUEST\n    });\n    try {\n      const response = await api.get(`/api/carts/${reqData.cartId}/item`, {\n        headers: {\n          Authorization: `Bearer ${reqData.token}`\n        }\n      });\n      dispatch({\n        type: GET_ALL_CART_ITEMS_SUCCESS,\n        payload: response.data\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_ALL_CART_ITEMS_FAILURE,\n        payload: error\n      });\n    }\n  };\n};\nexport const addItemToCart = reqData => {\n  return async dispatch => {\n    dispatch({\n      type: ADD_TO_CART_REQUEST\n    });\n    try {\n      const response = await api.put(`/api/cart/add`, reqData.cartItem, {\n        headers: {\n          Authorization: `Bearer ${reqData.token}`\n        }\n      });\n      console.log(\"Add item to card \", response);\n      dispatch({\n        type: ADD_TO_CART_SUCCESS,\n        payload: response.data\n      });\n    } catch (error) {\n      console.log(\"added is error\", error);\n      dispatch({\n        type: ADD_TO_CART_FAILURE,\n        payload: error\n      });\n    }\n  };\n};\nexport const updateCartItem = reqData => {\n  return async dispatch => {\n    dispatch({\n      type: UPDATE_CART_ITEM_REQUEST\n    });\n\n    // Log the request data to debug\n    if (!reqData.data.cartItemId) {\n      console.error(\"Cart item update failed: ID is missing.\");\n      dispatch({\n        type: UPDATE_CART_ITEM_FAILURE,\n        payload: {\n          message: \"Item ID must not be null.\"\n        }\n      });\n      return;\n    }\n    try {\n      const {\n        data\n      } = await api.put(`/api/cart-item/update`, reqData.data, {\n        headers: {\n          Authorization: `Bearer ${reqData.jwt}`\n        }\n      });\n      dispatch({\n        type: UPDATE_CART_ITEM_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      if (error.response) {\n        console.error(\"Error updating cart item:\", error.response.data);\n        dispatch({\n          type: UPDATE_CART_ITEM_FAILURE,\n          payload: {\n            message: error.response.data.message || \"An error occurred.\"\n          }\n        });\n      } else {\n        console.error(\"Error during request:\", error.message);\n        dispatch({\n          type: UPDATE_CART_ITEM_FAILURE,\n          payload: {\n            message: \"Request setup error.\"\n          }\n        });\n      }\n    }\n  };\n};\nconst removeCartItem = async cartItemId => {\n  // Retrieve the JWT token from localStorage (or wherever you stored it)\n  const jwt = localStorage.getItem(\"jwt\");\n  try {\n    const response = await api.delete(`/api/cart-item/${cartItemId}/remove`, {\n      headers: {\n        Authorization: `Bearer ${jwt}` // Include the JWT in the header\n      }\n    });\n    console.log(\"Item removed:\", response.data);\n  } catch (error) {\n    if (error.response) {\n      console.error(\"Error removing item:\", error.response.data);\n      console.error(\"Error status:\", error.response.status);\n    } else {\n      console.error(\"Network error:\", error.message);\n    }\n  }\n};\nexport const clearCartAction = () => {\n  return async dispatch => {\n    dispatch({\n      type: CLEAR_CART_REQUEST\n    });\n    try {\n      const response = await api.put(`/api/cart/clear`, {}, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n        }\n      });\n      dispatch({\n        type: CLEAR_CART_SUCCESS,\n        payload: response\n      });\n    } catch (error) {\n      dispatch({\n        type: CLEAR_CART_FAILURE,\n        payload: error\n      });\n    }\n  };\n};","map":{"version":3,"names":["api","ADD_TO_CART_FAILURE","ADD_TO_CART_REQUEST","ADD_TO_CART_SUCCESS","CLEAR_CART","CLEAR_CART_FAILURE","CLEAR_CART_REQUEST","CLEAR_CART_SUCCESS","FIND_CART_FAILURE","FIND_CART_REQUEST","FIND_CART_SUCCESS","GET_ALL_CART_ITEMS_FAILURE","GET_ALL_CART_ITEMS_REQUEST","GET_ALL_CART_ITEMS_SUCCESS","REMOVE_FROM_CART_FAILURE","REMOVE_FROM_CART_REQUEST","REMOVE_FROM_CART_SUCCESS","UPDATE_CART_ITEM_FAILURE","UPDATE_CART_ITEM_REQUEST","UPDATE_CART_ITEM_SUCCESS","findCart","token","dispatch","type","response","get","headers","Authorization","payload","data","console","log","error","getAllCArtItem","reqData","cartId","addItemToCart","put","cartItem","updateCartItem","cartItemId","message","jwt","removeCartItem","localStorage","getItem","delete","status","clearCartAction"],"sources":["C:/Users/gangw/OneDrive/Desktop/online-frontend/src/State/Cart/Action.js"],"sourcesContent":["import { api } from \"../../commponent/config/api\";\r\nimport {\r\n  ADD_TO_CART_FAILURE,\r\n  ADD_TO_CART_REQUEST,\r\n  ADD_TO_CART_SUCCESS,\r\n  CLEAR_CART,\r\n  CLEAR_CART_FAILURE,\r\n  CLEAR_CART_REQUEST,\r\n  CLEAR_CART_SUCCESS,\r\n  FIND_CART_FAILURE,\r\n  FIND_CART_REQUEST,\r\n  FIND_CART_SUCCESS,\r\n  GET_ALL_CART_ITEMS_FAILURE,\r\n  GET_ALL_CART_ITEMS_REQUEST,\r\n  GET_ALL_CART_ITEMS_SUCCESS,\r\n  REMOVE_FROM_CART_FAILURE,\r\n  REMOVE_FROM_CART_REQUEST,\r\n  REMOVE_FROM_CART_SUCCESS,\r\n  UPDATE_CART_ITEM_FAILURE,\r\n  UPDATE_CART_ITEM_REQUEST,\r\n  UPDATE_CART_ITEM_SUCCESS,\r\n} from \"./ActionType\";\r\n\r\nexport const findCart = (token) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: FIND_CART_REQUEST });\r\n    try {\r\n      const response = await api.get(`/api/cart`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      dispatch({ type: FIND_CART_SUCCESS, payload: response.data });\r\n      console.log(\"my CArt\", response.data);\r\n    } catch (error) {\r\n      console.log(\"error\", error);\r\n      dispatch({ type: FIND_CART_FAILURE, payload: error });\r\n    }\r\n  };\r\n};\r\n\r\nexport const getAllCArtItem = (reqData) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: GET_ALL_CART_ITEMS_REQUEST });\r\n    try {\r\n      const response = await api.get(`/api/carts/${reqData.cartId}/item`, {\r\n        headers: {\r\n          Authorization: `Bearer ${reqData.token}`,\r\n        },\r\n      });\r\n      dispatch({ type: GET_ALL_CART_ITEMS_SUCCESS, payload: response.data });\r\n    } catch (error) {\r\n      dispatch({ type: GET_ALL_CART_ITEMS_FAILURE, payload: error });\r\n    }\r\n  };\r\n};\r\n\r\nexport const addItemToCart = (reqData) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: ADD_TO_CART_REQUEST });\r\n    try {\r\n      const response = await api.put(`/api/cart/add`, reqData.cartItem, {\r\n        headers: {\r\n          Authorization: `Bearer ${reqData.token}`,\r\n        },\r\n      });\r\n      console.log(\"Add item to card \", response);\r\n      dispatch({ type: ADD_TO_CART_SUCCESS, payload: response.data });\r\n    } catch (error) {\r\n      console.log(\"added is error\", error);\r\n      dispatch({ type: ADD_TO_CART_FAILURE, payload: error });\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateCartItem = (reqData) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: UPDATE_CART_ITEM_REQUEST });\r\n\r\n    // Log the request data to debug\r\n    if (!reqData.data.cartItemId) {\r\n      console.error(\"Cart item update failed: ID is missing.\");\r\n      dispatch({\r\n        type: UPDATE_CART_ITEM_FAILURE,\r\n        payload: { message: \"Item ID must not be null.\" },\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const { data } = await api.put(`/api/cart-item/update`, reqData.data, {\r\n        headers: {\r\n          Authorization: `Bearer ${reqData.jwt}`,\r\n        },\r\n      });\r\n\r\n      dispatch({ type: UPDATE_CART_ITEM_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      if (error.response) {\r\n        console.error(\"Error updating cart item:\", error.response.data);\r\n        dispatch({\r\n          type: UPDATE_CART_ITEM_FAILURE,\r\n          payload: {\r\n            message: error.response.data.message || \"An error occurred.\",\r\n          },\r\n        });\r\n      } else {\r\n        console.error(\"Error during request:\", error.message);\r\n        dispatch({\r\n          type: UPDATE_CART_ITEM_FAILURE,\r\n          payload: { message: \"Request setup error.\" },\r\n        });\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nconst removeCartItem = async (cartItemId) => {\r\n  // Retrieve the JWT token from localStorage (or wherever you stored it)\r\n  const jwt = localStorage.getItem(\"jwt\");\r\n\r\n  try {\r\n    const response = await api.delete(`/api/cart-item/${cartItemId}/remove`, {\r\n      headers: {\r\n        Authorization: `Bearer ${jwt}`, // Include the JWT in the header\r\n      },\r\n    });\r\n    console.log(\"Item removed:\", response.data);\r\n  } catch (error) {\r\n    if (error.response) {\r\n      console.error(\"Error removing item:\", error.response.data);\r\n      console.error(\"Error status:\", error.response.status);\r\n    } else {\r\n      console.error(\"Network error:\", error.message);\r\n    }\r\n  }\r\n};\r\n\r\nexport const clearCartAction = () => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: CLEAR_CART_REQUEST });\r\n    try {\r\n      const response = await api.put(\r\n        `/api/cart/clear`,\r\n        {},\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n          },\r\n        }\r\n      );\r\n      dispatch({ type: CLEAR_CART_SUCCESS, payload: response });\r\n    } catch (error) {\r\n      dispatch({ type: CLEAR_CART_FAILURE, payload: error });\r\n    }\r\n  };\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}